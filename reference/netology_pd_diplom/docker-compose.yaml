version: "3.5"

services:
  # just a template to be used in each service
  logs-template: &logs_template
    image: alpine
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: "10m"

  db:
    <<: *logs_template
    image: postgres:11.2
    environment:
      POSTGRES_DB: "diplom_db"
      POSTGRES_USER: "diplom_user"
      POSTGRES_PASSWORD: "password"
      # Persist db data locally, so we can re-create the docker instance w/o reloading test data
      PGDATA: "/var/lib/postgresql/data/pgdata_dev"
    ports:
      - "5432:5432"
    volumes:
      - ${HOME}/dbs/diploma_pgdata_dev:/var/lib/postgresql/data/pgdata_dev
    networks:
      - dimploma-dev-net
#  nginx:
#    <<: *logs_template
#    image: nginx
#    ports:
#      - "80:80"
#      - "443:443"
#    volumes:
#      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
#      - ./docker/nginx/sites-enabled:/etc/nginx/sites-enabled
#    networks:
#      - dimploma-dev-net
#  app:
#    <<: *logs_template
#    build:
#      context: .
#      dockerfile: docker-build/Dockerfile
#
#    depends_on:
#      - db
#    networks:
#      - dimploma-dev-net
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
#    volumes:
#      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
#      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - dimploma-dev-net

  maildev:
    <<: *logs_template
    image: maildev/maildev
    restart: on-failure
    ports:
      - "1080:1080"
    command: ["--web", "1080", "--smtp", "1025"]
    networks:
      - dimploma-dev-net

networks:
  dimploma-dev-net:
    name: dimploma_dev_network
